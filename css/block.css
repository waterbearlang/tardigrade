/* Value blocks */
wb-value {
  display: inline-block;
  border-radius: 5px;
  border-style: solid;
  padding: 5px;
  padding-left: 1.5em;
  background: left / 1em no-repeat #fff
    url(../images/fa-svg/regular/question-circle.svg);
}

wb-contains > wb-value {
  margin: 5px;
}

wb-returns > wb-value {
  padding-top: 3px;
  padding-bottom: 3px;
  font-size: 80%;
}

/* Step blocks */
wb-step {
  display: inline-block;
  border-radius: 5px;
  /* padding-bottom: 14px; */
  position: relative;
  z-index: 0;
}

wb-step > header {
  background-color: var(--color);
  border-color: var(--border);
  border-width: 2px;
  border-style: solid;
}

wb-contains > wb-step {
  margin: 5px;
  margin-top: 12px;
}

/* Context blocks */
wb-context {
  display: inline-block;
  position: relative;
  z-index: 0;
}

wb-contains > wb-context {
  margin: 5px;
  margin-top: 12px;
}

/* Trigger blocks */
wb-trigger {
  display: inline-block;
  position: relative;
  z-index: 0;
}

wb-trigger > details::before{
  /* Define "Hat" */
  
}

wb-trigger::before,
wb-context::before {
  content: "";
  width: 10px;
  height: calc(100% - 15px);
  position: absolute;
  top: 15px;
  left: 0;
  margin: 0;
  padding: 0;
  background-color: var(--color);
  border-color: var(--color);
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
}

wb-trigger::after,
wb-context::after {
  content: "";
  height: 20px;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  margin: 0;
  padding: 0;
  background-color: var(--color);
  border-color: var(--border);
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  border-top-right-radius: 5px;
}

wb-contains > wb-trigger {
  margin: 5px 5px;
  margin-top: 12px;
}

/* Parameters */
wb-block-param,
wb-input-param,
wb-truth-param,
wb-select-param {
  display: inline-flex;
  flex-wrap: nowrap;
  max-height: 1.6em;
}

label {
  margin-left: 0.2em;
}

input {
  width: 4em;
  margin-left: 0.4em;
  padding-left: 1.5em;
  border: 2px inset #333;
}

input[readonly] {
  background-color: #ccc;
}

wb-contains {
  min-height: 1.25em;
  padding-bottom: 14px;
  padding: 0.5em;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: flex-start;
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
}

/* wb-hat needs ::before */

wb-hat::before {
  content: "";
  position: absolute;
  display: block;
  width: 100px;
  height: 100px;
  left: -15px;
  background-color: var(--color);
  border-color: var(--border);
  border-width: 2px;
  border-style: solid;
  border-radius: 100%;
}

wb-step,
wb-context summary,
wb-context,
wb-trigger summary {
  /* clip-path: url("#slot-cutout-path-inline"); */
  -webkit-mask: url(/images/slot.svg) 40px bottom, linear-gradient(#000, #000);
  -webkit-mask-composite: destination-out;
  mask-image: url(/images/slot.svg#slot-cutout-path), transparent;
  mask-composite: exclude;
  mask-position: 40px bottom, left top;
  mask-size: 40px 12px, auto auto;
  mask-repeat: no-repeat;
  /* mask-clip: stroke-box; */
}

/* slot within details */
wb-context summary,
wb-trigger summary {
  position: relative;
  background-color: var(--color);
  border-color: var(--border);
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
  padding-left: 10px;
  padding-right: 10px;
  padding-bottom: 25px;
}

summary > wb-slot {
  display: none;
}

details {
  margin: 0;
}

details[open] > summary > wb-slot {
  display: inline-block;
  bottom: 2px;
}

/* header within a block */

wb-step header,
wb-context header,
wb-trigger header,
wb-value header {
  display: inline-flex;
  flex-wrap: nowrap;
  justify-content: flex-start unsafe;
  padding: 0.3em 0.5em;
}

/* values within locals */
wb-locals > wb-value {
  margin-bottom: 0;
  margin-right: 1px;
}

/* Icons for types */

wb-block-param > input,
wb-input-param > input {
  background: left / contain no-repeat #fff
    url(../images/fa-svg/regular/question-circle.svg);
}

wb-block-param > input,
wb-input-param > input,
wb-value {
  background-color: var(--color);
  border-color: var(--border);
  background-image: var(--image);
}

/* Accessories for blocks */

/* top decoration for steps and contexts */
wb-tab {
  position: relative;
  display: block;
  fill: var(--color);
  stroke: var(--border);
  margin: 0;
  padding: 0;
  border: 0;
  width: 40px;
  height: 12px;
  left: 15px;
}

/* top decoration for triggers */
wb-hat {
  position: relative;
  display: block;
  fill: var(--color);
  stroke: var(--color);
  margin: 0;
  padding: 0;
  width: 100px;
  height: 12px;
  left: 15px;
  overflow: hidden;
}

/* Indicator for a next block for after steps and contexts and inside contexts and triggers */
wb-slot {
  position: absolute;
  margin: 0;
  padding: 0;
  display: block;
  width: 40px;
  height: 12px;
  left: 15px;
  bottom: 0px;
  fill: white;
}

/* Container for values local to a block */
wb-locals {
  position: relative;
  display: flex;
  flex-direction: row;
  background-color: white;
  padding: 1px;
  border-radius: 5px;
}

/* Container for the single result block of a step or context */
wb-returns {
  position: relative;
  display: inline-block;
  padding: 1px;
  background-color: white;
  border-radius: 5px;
  border: 3px inset grey;
  margin-left: 2em;
}
